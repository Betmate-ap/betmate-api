name: Deploy to Production

on:
  push:
    branches: [main]
  release:
    types: [published]

jobs:
  deploy:
    name: Deploy to Railway Production
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Railway Configuration
        run: |
          if [ -z "${{ secrets.RAILWAY_TOKEN }}" ]; then
            echo "‚ùå RAILWAY_TOKEN secret is not configured"
            echo "Please add the following secrets to your GitHub repository:"
            echo "1. RAILWAY_TOKEN - Your Railway API token"
            echo "2. RAILWAY_SERVICE_ID - Your Railway service ID"
            echo "3. PRODUCTION_URL - Your production environment URL"
            echo ""
            echo "To get your Railway token, run: railway auth"
            echo "To get your service ID, run: railway status"
            exit 1
          fi
          echo "‚úÖ Railway secrets are configured"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: betmate-api/package-lock.json

      - name: Install dependencies
        working-directory: ./betmate-api
        run: npm ci

      - name: Run tests
        working-directory: ./betmate-api
        run: npm test

      - name: Build application
        working-directory: ./betmate-api
        run: npm run build

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Verify Railway Authentication
        run: |
          echo "Verifying Railway authentication..."
          railway whoami || (echo "‚ùå Railway authentication failed" && exit 1)
          echo "‚úÖ Railway authentication successful"
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Deploy to Railway Production
        working-directory: ./betmate-api
        run: |
          echo "üöÄ Deploying to Railway production environment..."
          if [ -n "${{ secrets.RAILWAY_SERVICE_ID }}" ]; then
            railway deploy --service ${{ secrets.RAILWAY_SERVICE_ID }} --environment production
          else
            echo "‚ö†Ô∏è No service ID specified, deploying to linked service..."
            railway deploy --environment production
          fi
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Run post-deployment health check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 60
          curl -f ${{ secrets.PRODUCTION_URL }}/health || exit 1
          echo "Production deployment successful!"

      - name: Run smoke tests
        run: |
          echo "Running smoke tests..."
          curl -f ${{ secrets.PRODUCTION_URL }}/healthz
          curl -f ${{ secrets.PRODUCTION_URL }}/readyz
          curl -f ${{ secrets.PRODUCTION_URL }}/livez
          echo "All smoke tests passed!"

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: deploy
    if: always()

    steps:
      - name: Notify Success
        if: needs.deploy.result == 'success'
        run: echo "üöÄ Production deployment successful!"

      - name: Notify Failure
        if: needs.deploy.result == 'failure'
        run: echo "üö® Production deployment failed!"