name: Deploy to Production

on:
  push:
    branches: [main]
  release:
    types: [published]

jobs:
  deploy:
    name: Deploy to Railway Production
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: betmate-api/package-lock.json

      - name: Install dependencies
        working-directory: ./betmate-api
        run: npm ci

      - name: Run tests
        working-directory: ./betmate-api
        run: npm test

      - name: Build application
        working-directory: ./betmate-api
        run: npm run build

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway Production
        working-directory: ./betmate-api
        run: railway deploy --service ${{ secrets.RAILWAY_SERVICE_ID }} --environment production
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Run post-deployment health check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 60
          curl -f ${{ secrets.PRODUCTION_URL }}/health || exit 1
          echo "Production deployment successful!"

      - name: Run smoke tests
        run: |
          echo "Running smoke tests..."
          curl -f ${{ secrets.PRODUCTION_URL }}/healthz
          curl -f ${{ secrets.PRODUCTION_URL }}/readyz
          curl -f ${{ secrets.PRODUCTION_URL }}/livez
          echo "All smoke tests passed!"

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: deploy
    if: always()

    steps:
      - name: Notify Success
        if: needs.deploy.result == 'success'
        run: echo "ðŸš€ Production deployment successful!"

      - name: Notify Failure
        if: needs.deploy.result == 'failure'
        run: echo "ðŸš¨ Production deployment failed!"