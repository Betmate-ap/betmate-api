name: Deploy to Staging

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Railway Configuration
        run: |
          echo "üîç Validating Railway configuration..."

          MISSING_SECRETS=""

          if [ -z "${{ secrets.RAILWAY_TOKEN }}" ]; then
            MISSING_SECRETS="$MISSING_SECRETS\n‚ùå RAILWAY_TOKEN is not configured"
          fi

          # PROJECT_ID is optional when using service name
          if [ -z "${{ secrets.RAILWAY_PROJECT_ID }}" ]; then
            echo "‚ö†Ô∏è RAILWAY_PROJECT_ID not configured (will use service name instead)"
          fi

          if [ -n "$MISSING_SECRETS" ]; then
            echo "üö® Missing required Railway secrets:"
            echo -e "$MISSING_SECRETS"
            echo ""
            echo "üìã To fix this, add these secrets to your GitHub repository:"
            echo "1. Go to Settings ‚Üí Secrets and variables ‚Üí Actions"
            echo "2. Add the following secrets:"
            echo ""
            echo "Required secrets:"
            echo "- RAILWAY_TOKEN: Get from Railway Dashboard (https://railway.app/account/tokens)"
            echo "- RAILWAY_PROJECT_ID: Get with 'railway status'"
            echo ""
            echo "Optional environment secrets:"
            echo "- STAGING_DATABASE_URL: Database URL for staging"
            echo "- STAGING_JWT_SECRET: JWT secret for staging"
            echo "- STAGING_CORS_ORIGIN: CORS origin for staging"
            echo ""
            echo "üí° See RAILWAY_SETUP.md for detailed setup instructions"
            exit 1
          fi

          echo "‚úÖ All required Railway secrets are configured"

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway (Staging)
        run: |
          echo "üöÄ Deploying to Railway staging..."
          echo "üîê Using Railway token for authentication..."

          # Link to the project first
          echo "Linking to Railway project: fearless-serenity"
          railway link fearless-serenity --environment production

          # Deploy to the staging service
          echo "Deploying to service: betmate-api-staging"
          railway up --service betmate-api-staging

          echo "‚úÖ Deployment completed successfully!"
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
          NODE_ENV: staging
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
          JWT_SECRET: ${{ secrets.STAGING_JWT_SECRET }}
          CORS_ORIGIN: ${{ secrets.STAGING_CORS_ORIGIN }}

      - name: Run Health Check
        run: |
          echo "üè• Running post-deployment health check..."
          # Wait for deployment to be ready
          sleep 30

          # Try to get the service URL and test it
          if command -v curl >/dev/null 2>&1; then
            echo "Testing health endpoints..."
            # Note: Replace with actual staging URL when available
            # curl -f https://your-staging-url.railway.app/health || echo "‚ö†Ô∏è Health check failed or URL not available"
            echo "‚úÖ Health check completed"
          else
            echo "‚ö†Ô∏è curl not available, skipping health check"
          fi
